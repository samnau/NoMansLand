
// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class StoryTextManager : MonoBehaviour {
	public TextAsset storyFile;
	void Start(){
		Load (storyFile);
	}
	public class Row
	{
		public string SCENENAME;
		public string SPEAKER_ORDER;
		public string SPEAKER1;
		public string TEXT1;
		public string SPEAKER2;
		public string TEXT2;
		public string SPEAKER3;
		public string TEXT3;
		public string SPEAKER4;
		public string TEXT4;
	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.SCENENAME = grid[i][0];
			row.SPEAKER_ORDER = grid[i][1];
			row.SPEAKER1 = grid[i][2];
			row.TEXT1 = grid[i][3];
			row.SPEAKER2 = grid[i][4];
			row.TEXT2 = grid[i][5];
			row.SPEAKER3 = grid[i][6];
			row.TEXT3 = grid[i][7];
			row.SPEAKER4 = grid[i][8];
			row.TEXT4 = grid[i][9];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_SCENENAME(string find)
	{
		return rowList.Find(x => x.SCENENAME == find);
	}
	public List<Row> FindAll_SCENENAME(string find)
	{
		return rowList.FindAll(x => x.SCENENAME == find);
	}
	public Row Find_SPEAKER_ORDER(string find)
	{
		return rowList.Find(x => x.SPEAKER_ORDER == find);
	}
	public List<Row> FindAll_SPEAKER_ORDER(string find)
	{
		return rowList.FindAll(x => x.SPEAKER_ORDER == find);
	}
	public Row Find_SPEAKER1(string find)
	{
		return rowList.Find(x => x.SPEAKER1 == find);
	}
	public List<Row> FindAll_SPEAKER1(string find)
	{
		return rowList.FindAll(x => x.SPEAKER1 == find);
	}
	public Row Find_TEXT1(string find)
	{
		return rowList.Find(x => x.TEXT1 == find);
	}
	public List<Row> FindAll_TEXT1(string find)
	{
		return rowList.FindAll(x => x.TEXT1 == find);
	}
	public Row Find_SPEAKER2(string find)
	{
		return rowList.Find(x => x.SPEAKER2 == find);
	}
	public List<Row> FindAll_SPEAKER2(string find)
	{
		return rowList.FindAll(x => x.SPEAKER2 == find);
	}
	public Row Find_TEXT2(string find)
	{
		return rowList.Find(x => x.TEXT2 == find);
	}
	public List<Row> FindAll_TEXT2(string find)
	{
		return rowList.FindAll(x => x.TEXT2 == find);
	}
	public Row Find_SPEAKER3(string find)
	{
		return rowList.Find(x => x.SPEAKER3 == find);
	}
	public List<Row> FindAll_SPEAKER3(string find)
	{
		return rowList.FindAll(x => x.SPEAKER3 == find);
	}
	public Row Find_TEXT3(string find)
	{
		return rowList.Find(x => x.TEXT3 == find);
	}
	public List<Row> FindAll_TEXT3(string find)
	{
		return rowList.FindAll(x => x.TEXT3 == find);
	}
	public Row Find_SPEAKER4(string find)
	{
		return rowList.Find(x => x.SPEAKER4 == find);
	}
	public List<Row> FindAll_SPEAKER4(string find)
	{
		return rowList.FindAll(x => x.SPEAKER4 == find);
	}
	public Row Find_TEXT4(string find)
	{
		return rowList.Find(x => x.TEXT4 == find);
	}
	public List<Row> FindAll_TEXT4(string find)
	{
		return rowList.FindAll(x => x.TEXT4 == find);
	}

}